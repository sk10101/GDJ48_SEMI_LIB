<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdj.lib.dao.BookDAO">

<!-- 검색 옵션 쿼리문 시작 -->
	<select id="searchTitle" parameterType="hashmap" resultType="com.gdj.lib.dto.BookDTO">
		SELECT p.newFileName, post_id, b_id, b_title, writer, publisher, b_status, b.reserve_able FROM book b,
			(SELECT newFileName, post_id FROM photo WHERE category_id ="4") p 
		WHERE b_title LIKE CONCAT('%', #{param3}, '%') AND p.post_id = b.b_id
			LIMIT #{param1} OFFSET #{param2}
	</select>
	
	<select id="searchWriter" resultType="com.gdj.lib.dto.BookDTO">
		SELECT p.newFileName, post_id, b_id, b_title, writer, publisher, b_status, b.reserve_able FROM book b,
			(SELECT newFileName, post_id FROM photo WHERE category_id ="4") p 
		WHERE writer LIKE CONCAT('%', #{param3}, '%') AND p.post_id = b.b_id
			LIMIT #{param1} OFFSET #{param2}
	</select>
	
	<select id="searchPublisher" parameterType="hashmap" resultType="com.gdj.lib.dto.BookDTO">
		SELECT p.newFileName, post_id, b_id, b_title, writer, publisher, b_status, b.reserve_able FROM book b,
			(SELECT newFileName, post_id FROM photo WHERE category_id ="4") p 
		WHERE publisher LIKE CONCAT('%', #{param3}, '%') AND p.post_id = b.b_id
			LIMIT #{param1} OFFSET #{param2}
	</select>
<!-- 검색 옵션 쿼리문 끝 -->

<!-- 관리자 도서관리 시작 -->
	<!-- 도서 목록 페이징 -->	
	<select id="bookList" resultType="com.gdj.lib.dto.BookDTO">
		SELECT b_id, b_title, writer, publisher, b_status, b_date FROM book 
			WHERE hide = 0
			ORDER BY b_id DESC limit #{param1} offset #{param2}
	</select>
	
	<select id="bookWriterSearch" resultType="com.gdj.lib.dto.BookDTO">
		SELECT b_id, b_title, writer, publisher, b_status, b_date FROM book
		WHERE writer LIKE CONCAT('%', #{param3}, '%')
			ORDER BY b_id DESC LIMIT #{param1} OFFSET #{param2}
	</select>
	
	<select id="bookPublisherSearch" resultType="com.gdj.lib.dto.BookDTO">
		SELECT b_id, b_title, writer, publisher, b_status, b_date FROM book
		WHERE publisher LIKE CONCAT('%', #{param3}, '%')
			ORDER BY b_id DESC LIMIT #{param1} OFFSET #{param2}
	</select>
	
	<select id="bookTitleSearch" resultType="com.gdj.lib.dto.BookDTO">
		SELECT b_id, b_title, writer, publisher, b_status, b_date FROM book
		WHERE b_title LIKE CONCAT('%', #{param3}, '%')
			ORDER BY b_id DESC LIMIT #{param1} OFFSET #{param2}
	</select>

	
	<select id="bookb_statusSearch" resultType="com.gdj.lib.dto.BookDTO">
		SELECT b_id, b_title, writer, publisher, b_status, b_date FROM book
		WHERE b_status LIKE CONCAT('%', #{param3}, '%')
			ORDER BY b_id DESC LIMIT #{param1} OFFSET #{param2}
	</select>
	

	<!-- 검색 기능 개선하기 위해 주석 처리하고 새 코드 작성

	<select id="allCount" resultType="Integer">
		SELECT COUNT(b_id) FROM book
	</select>
	 -->

	<!-- 도서 목록 페이징 끝-->	
	
	<select id="detail" parameterType="String" resultType="com.gdj.lib.dto.BookDTO">
		SELECT * FROM book WHERE b_id = #{b_id}
	</select>
	
	<select id="photoList" parameterType="String" resultType="com.gdj.lib.dto.PhotoDTO">
		SELECT * FROM photo WHERE category_id = "4" and post_id = #{b_id}
	</select>
	
	<!-- 도서추가 관리 -->
	<insert id="bookAdd" 
		useGeneratedKeys="true"
		keyColumn="b_id"
		keyProperty="b_id"
		parameterType="com.gdj.lib.dto.BookDTO">
		INSERT INTO book(b_title, writer, publisher, issue, b_status)
			VALUES(#{b_title},#{writer},#{publisher},#{issue},"대출가능")
	</insert>
	
	<insert id="fileWrite" >
		INSERT INTO photo(category_id, oriFileName, newFileName, post_id)
			VALUES("4", #{param1}, #{param2}, #{param3})
	</insert>
	
	<!-- 도서 업데이트 -->
	<update id="bookUpdate" parameterType="com.gdj.lib.dto.BookDTO">
		UPDATE book SET b_title = #{b_title}
			,writer = #{writer} , publisher = #{publisher}
			,issue = #{issue} , b_date = now()
			,b_status = #{b_status}
		WHERE b_id = #{b_id}
	</update>
	
	<select id="photoChk" resultType="Integer">
		SELECT count(p.post_id) FROM photo p, book b WHERE p.post_id = #{b_id} AND p.category_id ="4";
	</select>
	
	<update id="fileUpdate" >
		Update photo SET oriFileName = #{param1}
			, newFileName = #{param2}
		WHERE category_id = "4" AND post_id = #{param3}
	</update>
	
	<delete id="delPhoto">
		DELETE FROM photo WHERE category_id="4" AND post_id = #{param1}
	</delete>
	
	<update id="bookHide" parameterType="String">
		UPDATE book SET hide = 1 WHERE b_id = #{b_id} 
	</update>
<!-- 관리자 도서관리 끝 -->	

<!-- 도서 검색 개선을 위해 새로 작성한 코드 -->	
<select id="allCount" resultType="com.gdj.lib.dto.BoardDTO" parameterType="hashmap">
	SELECT p.newFileName, post_id, b_id, b_title, writer, publisher, b_status, b.reserve_able FROM book b,
			(SELECT newFileName, post_id FROM photo WHERE category_id ="4") p 
	WHERE 1=1
	<if test="word != null and word != ''">
		<choose>
			<when test="option.equals('제목')">
				AND b_title LIKE CONCAT('%',#{word},'%')
			</when>
			<when test="option.equals('저자')">
				AND writer LIKE CONCAT('%',#{word},'%')
			</when>
			<when test="option.equals('출판사')">
				AND publisher LIKE CONCAT('%',#{word},'%')
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</if>
	AND p.post_id = b.b_id
</select>

<!-- 관리자 페이지는 임시로 별도의 count 를 세어 사용한다. -->
<select id="allBookCount" resultType="com.gdj.lib.dto.BoardDTO" parameterType="hashmap">
	SELECT b_id, b_title, writer, publisher, b_status, b_date FROM book 
	WHERE 1=1
	<if test="word != null and word != ''">
		<choose>
			<when test="option.equals('제목')">
				AND b_title LIKE CONCAT('%',#{word},'%')
			</when>
			<when test="option.equals('저자')">
				AND writer LIKE CONCAT('%',#{word},'%')
			</when>
			<when test="option.equals('출판사')">
				AND publisher LIKE CONCAT('%',#{word},'%')
			</when>
			<when test="option.equals('도서상태')">
				AND b_status LIKE CONCAT('%',#{word},'%')
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</if>
</select>


</mapper>