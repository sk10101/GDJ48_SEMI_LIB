<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdj.lib.dao.BookDAO">

<!-- 검색 옵션 쿼리문 시작 -->
	<select id="searchTitle" parameterType="hashmap" resultType="com.gdj.lib.dto.BookDTO">
		SELECT p.newFileName, post_id, b_id, b_title, writer, publisher, b_status FROM book b,
			(SELECT newFileName, post_id FROM photo WHERE category_id ="4") p 
		WHERE b_title LIKE CONCAT('%', #{param1}, '%') AND p.post_id = b.b_id; 
	</select>
	
	<select id="searchWriter" resultType="com.gdj.lib.dto.BookDTO">
		SELECT p.newFileName, post_id, b_id, b_title, writer, publisher, b_status FROM book b,
			(SELECT newFileName, post_id FROM photo WHERE category_id ="4") p 
		WHERE writer LIKE CONCAT('%', #{param1}, '%') AND p.post_id = b.b_id;
	</select>
	
	<select id="searchPublisher" parameterType="hashmap" resultType="com.gdj.lib.dto.BookDTO">
		SELECT p.newFileName, post_id, b_id, b_title, writer, publisher, b_status FROM book b,
			(SELECT newFileName, post_id FROM photo WHERE category_id ="4") p 
		WHERE publisher LIKE CONCAT('%', #{param1}, '%') AND p.post_id = b.b_id;
	</select>
	 
	<select id="reserveChk" parameterType="hashmap" resultType="com.gdj.lib.dto.BookDTO">
		SELECT b.b_id, r.reserve_id, r.reason FROM book b RIGHT JOIN reservation r ON b.b_id=r.b_id 
		WHERE b.b_status = "대출중" AND b_title LIKE CONCAT('%', #{param2}, '%');
	</select>
	
<!-- 검색 옵션 쿼리문 끝 -->

<!-- 관리자 도서관리 시작 -->
	<!-- 도서 목록 페이징 -->	
	<select id="bookList" resultType="com.gdj.lib.dto.BookDTO">
		SELECT b_id, b_title, writer, publisher, b_status, b_date FROM book 
			ORDER BY b_id DESC limit #{param1} offset #{param2}
	</select>
	
	<select id="allCount" resultType="Integer">
		SELECT COUNT(b_id) FROM book;
	</select>
	<!-- 도서 목록 페이징 끝-->	
	
	<select id="detail" parameterType="String" resultType="com.gdj.lib.dto.BookDTO">
		SELECT * FROM book WHERE b_id = #{b_id}
	</select>
	
	<select id="photoList" parameterType="String" resultType="com.gdj.lib.dto.PhotoDTO">
		SELECT * FROM photo WHERE category_id = "4" and post_id = #{b_id}
	</select>
	
	<!-- 도서추가 관리 -->
	<insert id="bookAdd" 
		useGeneratedKeys="true"
		keyColumn="b_id"
		keyProperty="b_id"
		parameterType="com.gdj.lib.dto.BookDTO">
		INSERT INTO book(b_title, writer, publisher, issue, b_status)
			VALUES(#{b_title},#{writer},#{publisher},#{issue},"대출가능")
	</insert>
	
	<insert id="fileWrite" >
		INSERT INTO photo(category_id, oriFileName, newFileName, post_id)
			VALUES("4", #{param1}, #{param2}, #{param3})
	</insert>
	
	<!-- 도서 업데이트 -->
	<update id="bookUpdate" parameterType="com.gdj.lib.dto.BookDTO">
		UPDATE book SET b_title = #{b_title}
			,writer = #{writer} , publisher = #{publisher}
			,issue = #{issue} , b_date = now()
			,b_status = #{b_status}
		WHERE b_id = #{b_id}
	</update>
	
	<select id="photoChk" resultType="Integer">
		SELECT count(p.post_id) FROM photo p, book b WHERE p.post_id = #{b_id} AND p.category_id ="4";
	</select>
	
	<update id="fileUpdate" >
		Update photo SET oriFileName = #{param1}
			, newFileName = #{param2}
		WHERE category_id = "4" AND post_id = #{param3};
	</update>
<!-- 관리자 도서관리 끝 -->	
</mapper>