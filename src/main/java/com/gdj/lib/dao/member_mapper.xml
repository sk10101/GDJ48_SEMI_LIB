<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdj.lib.dao.MemberDAO">
	

	<select id="memberUpdateDetailMy" resultType="com.gdj.lib.dto.MemberDTO" parameterType="String">
		Select mb_id, mb_pw, name, phone, email , mb_status FROM member WHERE mb_id = #{mb_id}
	</select>
	
	<select id="memberUpdateListMy" resultType="com.gdj.lib.dto.MemberDTO" parameterType="String">
		SELECT mb_id, mb_pw, name, phone, email FROM member
		
	</select>
	
	<update id="myUpdate" parameterType="String">
		UPDATE member SET
			mb_pw = #{param2}
			,name = #{param3}
			,phone = #{param4}
		WHERE mb_id = #{param1}
	</update>
	
	<update id="myUpdateTwo" parameterType="String">
		UPDATE member SET
			name = #{param2}
			,phone = #{param3}
		WHERE mb_id = #{param1}
	</update>
	
	<update id="cancelMySecession" parameterType="String">
		update member set mb_status = null , leave_date = null where mb_id = #{param1}
	</update>
	
	<update id="MySecession" parameterType="String">
		update member set mb_status = '탈퇴신청', leave_date = now() where mb_id = #{param1}
	</update>
	
	<update id="MySecessionTwo" parameterType="String">
		update member set mb_status = '탈퇴완료' where mb_status = '탈퇴신청'
			and leave_date >= date_add(leave_date, interval 7 day)
	</update>

	<select id="memberList" resultType="com.gdj.lib.dto.MemberDTO">
		SELECT mb_id, name, mb_status FROM member where mb_class = '일반회원'
		LIMIT #{param1} OFFSET #{param2}

	</select>
	
	<select id="detail" parameterType="String" resultType="com.gdj.lib.dto.MemberDTO">
		SELECT * FROM member WHERE mb_id = #{mb_id}	
	</select>
	
	<select id="adminList" resultType="com.gdj.lib.dto.MemberDTO">
		SELECT mb_id, name, phone FROM member where mb_class = '관리자'
		LIMIT #{param1} OFFSET #{param2}
	</select>
	
	<update id="update" parameterType="hashmap">
		UPDATE member SET mb_class = #{mb_class}
		WHERE mb_id = #{mb_id}
	</update>
	
	
	
	
	<select id="blackList" resultType="com.gdj.lib.dto.MemberDTO">
		SELECT black_id, mb_id, admin_start, black_start, admin_end, black_end FROM blacklist
			ORDER BY black_start DESC LIMIT #{param1} OFFSET #{param2}
	</select>
	
	

	<select id="blackDetail" resultType="com.gdj.lib.dto.MemberDTO">
      SELECT *FROM blackList b ,member m WHERE b.mb_id = m.mb_id and black_id= #{param1}
	</select>

	
	<select id="idget" resultType="String">
		SELECT mb_id FROM member WHERE mb_id = #{mb_id}
	</select>
	
	<insert id="blackAdd" parameterType="com.gdj.lib.dto.MemberDTO">
		INSERT INTO blacklist (mb_id,admin_start, black_reason) 
			VALUES(#{mb_id},#{admin_start},#{black_reason})
	</insert>



	
	<!-- 이용정지 리스트 페이징 -->	
	<select id="penaltyList" resultType="com.gdj.lib.dto.MemberDTO">
		SELECT penalty_id,mb_id,category_id,penalty_start,penalty_end,cancel  FROM penalty
				ORDER BY penalty_id DESC limit #{param1} offset #{param2}
		
	</select>
	
	<select id="allCount" resultType="Integer">
		SELECT COUNT(penalty_id) FROM penalty
	</select>
	
	<select id="penaltyDetail" resultType="com.gdj.lib.dto.MemberDTO">
      <!-- SELECT *FROM penalty WHERE penalty_id= #{param1} -->
      SELECT *FROM penalty p ,member m WHERE p.mb_id = m.mb_id and penalty_id= #{param1}
   </select>
   
	
	  <update id="penaltyUpdate" parameterType="hashmap">
      UPDATE penalty SET cancel  = #{cancel} 
      , admin_cancel = #{admin_cancel}
      ,penalty_end = now()
      WHERE penalty_id = #{penalty_id}
   </update>
   
   
    <update id="blackUpdate" parameterType="hashmap">
      UPDATE blacklist SET black_cancel  = #{black_cancel} 
	      , admin_end = #{admin_end}
	      , end_reason = #{end_reason}
	      ,black_end = now()
      WHERE black_id = #{black_id}
   </update>
   
   
   <select id="allBlackCount" resultType="int">
		SELECT COUNT(black_id) FROM blacklist
	</select>
	
	
	<select id="allMemeberCount" resultType="int">
		SELECT COUNT(mb_id) FROM member WHERE mb_class = '일반회원'
	</select>
   
	<select id="allAdminCount" resultType="int">
		SELECT COUNT(mb_id) FROM member WHERE mb_class = '관리자'
	</select>
	
	
	
	
	
	
	
	<!-- ============================================== -->
	
	<insert id="memberjoin" parameterType="hashmap">
		INSERT INTO member(mb_id,mb_pw,name,phone,email,mb_class)
		VALUES(#{id},#{pw},#{name},#{phone},#{email},'일반회원')
	</insert>
		
	<select id="memberoverlay" parameterType="String" resultType="String">
		SELECT * FROM member WHERE mb_id = #{chkId}
	</select>
	
	<select id="memberoverlays" parameterType="String" resultType="String">
	SELECT * FROM member WHERE email = #{chkEmail}
	</select>
	
	<select id="idFind" resultType="String" parameterType="String">
	SELECT mb_id FROM member WHERE email = #{email}
	</select>
	
	<select id="pwFind" resultType="String">
	SELECT mb_pw FROM member WHERE mb_id = #{param1} AND email = #{param2}
	</select>
	
	<select id="login" resultType="String">
	SELECT mb_id FROM member WHERE mb_id = #{param1} AND mb_pw= #{param2};

	</select>

	<update id="blackCancel" parameterType="hashmap">
		UPDATE blacklist SET 
			admin_end=#{admin_end}, 
			black_end=now(), 
			end_reason=#{end_reason}
		WHERE black_id = #{black_id};
	</update>

	
	<select id="getMbClass" resultType="String">
	SELECT mb_class FROM member WHERE mb_id = #{param1} AND mb_pw= #{param2};

	</select>
	
	
	
	
	
	
	
	<!-- ============================================== -->
	
	<select id="brwList" parameterType="String" resultType="com.gdj.lib.dto.BrwBookDTO">
		SELECT brw_id, b.b_id, b.b_title, brw_date, return_date, return_finish, brw_status, renew
		FROM borrow br, book b 
		WHERE br.b_id = b.b_id AND br.brw_status="대출" AND mb_id=#{mb_id}
	</select>
	
	<select id="hisList" parameterType="String" resultType="com.gdj.lib.dto.BrwBookDTO">
		SELECT brw_id, b.b_id, b.b_title, brw_date, return_date, return_finish, brw_status, renew
		FROM borrow br, book b 
		WHERE br.b_id = b.b_id AND br.brw_status="반납" AND mb_id=#{mb_id}
	</select>
	
	<select id="reserveList" parameterType="String" resultType="com.gdj.lib.dto.BrwBookDTO">
		SELECT reserve_id, b.b_id, b.b_title, reserve_date, reason
		FROM reservation r, book b 
		WHERE r.b_id = b.b_id AND mb_id=#{mb_id}
	</select>
	
	<update id="reserveCancel">
		UPDATE reservation SET reason = "정상" 
		WHERE reserve_id = #{param1};
	</update>
	
	
	
	
	
	
	
	
	
	
	
	
</mapper>


